#include <iostream>
#include <unordered_map>
int lengthOfLongestSubstring(std::string s) {
    std::unordered_map<char, int> charIndex;
    int maxLength = 0;
    int start = 0;
    for (int end = 0; end < s.length(); ++end) {
        if (charIndex.find(s[end]) != charIndex.end()) {
            start = std::max(start, charIndex[s[end]] + 1);
        }
        charIndex[s[end]] = end;
        maxLength = std::max(maxLength, end - start + 1);
    }
    return maxLength;
}
int main() {
    std::string input;
    std::cout << "Enter a string: ";
    std::cin >> input;
    int result = lengthOfLongestSubstring(input);
    std::cout << "Length of the longest substring without repeating characters: " << result << std::endl;
    return 0;
}
